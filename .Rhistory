h3_all$p2_id <- as.numeric(h3_all$p2_id)
h3_nonupset$p1_id <- as.numeric(h3_nonupset$p1_id)
h3_nonupset$p2_id <- as.numeric(h3_nonupset$p2_id)
# add a column with a flag for winner vs loser "wflag"
h3_upset$wflag = ifelse(
h3_upset$player == 1,ifelse(h3_upset$p1_id == h3_upset$atp_winner_id, "W", "L"), # if indicator on row is P1...
ifelse(h3_upset$p2_id == h3_upset$atp_winner_id, "W", "L")) # otherwise same logic if indicator is P2
h3_all$wflag = ifelse(
h3_all$player == 1,ifelse(h3_all$p1_id == h3_all$atp_winner_id, "W", "L"),
ifelse(h3_all$p2_id == h3_all$atp_winner_id, "W", "L"))
h3_nonupset$wflag = ifelse(
h3_nonupset$player == 1,ifelse(h3_nonupset$p1_id == h3_nonupset$atp_winner_id, "W", "L"),
ifelse(h3_nonupset$p2_id == h3_nonupset$atp_winner_id, "W", "L"))
# filter accordingly, create stats columns, select relevant columns only, store in new df
# upsets mutate
tfilter = filter(h3_upset, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
#glimpse(tfilter)
#glimpse(tmutate)
h3_upsetstats_w = tmutate
tfilter = filter(h3_upset, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_upsetstats_l = tmutate
# all
tfilter = filter(h3_all, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
h3_allstats_w = tmutate
tfilter = filter(h3_all, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_allstats_l = tmutate
# nonupsets
tfilter = filter(h3_nonupset, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
h3_nonupsetstats_w = tmutate
tfilter = filter(h3_nonupset, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_nonupsetstats_l = tmutate
glimpse(h3_upsetstats_w)
h3_upset
tfilter = filter(h3_upset, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
#glimpse(tfilter)
#glimpse(tmutate)
h3_upsetstats_w = tmutate
tfilter = filter(h3_upset, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_upsetstats_l = tmutate
# all
tfilter = filter(h3_all, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
h3_allstats_w = tmutate
tfilter = filter(h3_all, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_allstats_l = tmutate
# nonupsets
tfilter = filter(h3_nonupset, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
h3_nonupsetstats_w = tmutate
tfilter = filter(h3_nonupset, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_nonupsetstats_l = tmutate
tfilter = filter(h3_upset, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
glimpse(tmutate)
glimpse(h3_upset)
h3_upset <- select(inner_join(stats_overview, c_odds_atp_upsets, by = "atp_key"), c(1:h3_cols, h3_cols+c_date_pos-1, h3_cols+c_win_pos-1, h3_cols+c_wclass_pos-1, h3_cols+c_lclass_pos-1, h3_cols+c_utype_pos-1))
glimpse(h3_upset)
c_date_pos <- grep("Date", colnames(c_odds_atp_all))
c_win_pos <- grep("atp_winner_id", colnames(c_odds_atp_all))
c_wclass_pos <- grep("winner_class", colnames(c_odds_atp_all))
c_lclass_pos <- grep("loser_class", colnames(c_odds_atp_all))
c_utype_pos <- grep("upset_type", colnames(c_odds_atp_all))
h3_cols <- ncol(stats_overview)
h3_all <- select(inner_join(stats_overview, c_odds_atp_all, by = "atp_key"), c(1:h3_cols, h3_cols+c_date_pos-1, h3_cols+c_win_pos-1, h3_cols+c_wclass_pos-1, h3_cols+c_lclass_pos-1, h3_cols+c_utype_pos-1))
glimpse(h3_all)
glimpse(h3_upset)
glimpse(h3_upset)
glimpse(tmutate)
glimpse(h3_upsetstats_w)
h3_upsetstats_w = tmutate
glimpse(h3_upsetstats_w)
tfilter = filter(h3_upset, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_upsetstats_l = tmutate
# all
tfilter = filter(h3_all, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
h3_allstats_w = tmutate
tfilter = filter(h3_all, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_allstats_l = tmutate
# nonupsets
tfilter = filter(h3_nonupset, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
h3_nonupsetstats_w = tmutate
tfilter = filter(h3_nonupset, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_nonupsetstats_l = tmutate
c_date_pos <- grep("Date", colnames(c_odds_atp_all))
c_win_pos <- grep("atp_winner_id", colnames(c_odds_atp_all))
c_wclass_pos <- grep("winner_class", colnames(c_odds_atp_all))
c_lclass_pos <- grep("loser_class", colnames(c_odds_atp_all))
c_utype_pos <- grep("upset_type", colnames(c_odds_atp_all))
h3_cols <- ncol(stats_overview)
h3_all <- select(inner_join(stats_overview, c_odds_atp_all, by = "atp_key"), c(1:h3_cols, h3_cols+c_date_pos-1, h3_cols+c_win_pos-1, h3_cols+c_wclass_pos-1, h3_cols+c_lclass_pos-1, h3_cols+c_utype_pos-1))
#glimpse(h3_all)
h3_nonupset <- select(inner_join(stats_overview, c_odds_atp_nonupsets, by = "atp_key"), c(1:h3_cols, h3_cols+c_date_pos-1, h3_cols+c_win_pos-1, h3_cols+c_wclass_pos-1, h3_cols+c_lclass_pos-1, h3_cols+c_utype_pos-1))
#glimpse(h3_nonupset)
h3_upset <- select(inner_join(stats_overview, c_odds_atp_upsets, by = "atp_key"), c(1:h3_cols, h3_cols+c_date_pos-1, h3_cols+c_win_pos-1, h3_cols+c_wclass_pos-1, h3_cols+c_lclass_pos-1, h3_cols+c_utype_pos-1))
#glimpse(h3_upset)
#glimpse(c_odds_atp_all)
# now figure out whether player 1 or 2 was winner, adjust stats accordingly
h3_upset$p1_id <- as.numeric(h3_upset$p1_id)
h3_upset$p2_id <- as.numeric(h3_upset$p2_id)
h3_all$p1_id <- as.numeric(h3_all$p1_id)
h3_all$p2_id <- as.numeric(h3_all$p2_id)
h3_nonupset$p1_id <- as.numeric(h3_nonupset$p1_id)
h3_nonupset$p2_id <- as.numeric(h3_nonupset$p2_id)
# add a column with a flag for winner vs loser "wflag"
h3_upset$wflag = ifelse(
h3_upset$player == 1,ifelse(h3_upset$p1_id == h3_upset$atp_winner_id, "W", "L"), # if indicator on row is P1...
ifelse(h3_upset$p2_id == h3_upset$atp_winner_id, "W", "L")) # otherwise same logic if indicator is P2
h3_all$wflag = ifelse(
h3_all$player == 1,ifelse(h3_all$p1_id == h3_all$atp_winner_id, "W", "L"),
ifelse(h3_all$p2_id == h3_all$atp_winner_id, "W", "L"))
h3_nonupset$wflag = ifelse(
h3_nonupset$player == 1,ifelse(h3_nonupset$p1_id == h3_nonupset$atp_winner_id, "W", "L"),
ifelse(h3_nonupset$p2_id == h3_nonupset$atp_winner_id, "W", "L"))
# filter accordingly, create stats columns, select relevant columns only, store in new df
# upsets mutate
tfilter = filter(h3_upset, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
#glimpse(tfilter)
#glimpse(tmutate)
#glimpse(h3_upset)
#glimpse(h3_upsetstats_w)
h3_upsetstats_w = tmutate
tfilter = filter(h3_upset, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_upsetstats_l = tmutate
# all
tfilter = filter(h3_all, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
h3_allstats_w = tmutate
tfilter = filter(h3_all, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_allstats_l = tmutate
# nonupsets
tfilter = filter(h3_nonupset, wflag == "W", set == "Total")
tmutate = mutate(tfilter, ace_pct_w = (aces / serve_pts), df_pct_w = (dfs / serve_pts), firstin_pct_w = (first_in / serve_pts), firstwon_pct_w = (first_won / first_in), secondwon_pct_w = (second_won / second_in), bkfcd_pct_w = (bk_pts / serve_pts), bksvd_pct_w = (bp_saved / bk_pts), retwon_pct_w = (return_pts_won / return_pts), win_uf_ratio_w = (winners / unforced))
h3_nonupsetstats_w = tmutate
tfilter = filter(h3_nonupset, wflag == "L", set == "Total")
tmutate = mutate(tfilter, ace_pct_l = (aces / serve_pts), df_pct_l = (dfs / serve_pts), firstin_pct_l = (first_in / serve_pts), firstwon_pct_l = (first_won / first_in), secondwon_pct_l = (second_won / second_in), bkfcd_pct_l = (bk_pts / serve_pts), bksvd_pct_l = (bp_saved / bk_pts), retwon_pct_l = (return_pts_won / return_pts), win_uf_ratio_l = (winners / unforced))
h3_nonupsetstats_l = tmutate
glimpse(h3_upsetstats_w)
head(h3_upsetstats_w,1)
i = 1
data = h3_upsetstats_w
data$atp_winner_id == data$atp_winner_id[i]
(data$Date < data$Date[i]) & (data$Date >= (data$Date[i]-days))
data = h3_allstats_w
(data$Date < data$Date[i]) & (data$Date >= (data$Date[i]-days))
i = 2
(data$Date < data$Date[i]) & (data$Date >= (data$Date[i]-days))
data$Date
(data$Date < data$Date[i])
glimpse(h3_upsetstats_w)
data$Date[i]
data$Date
data$Date[1]
data$Date[2]
data$Date[1] < data$Date[2]
data$Date < data$Date[i]
data$Date >= (data$Date[i]-days)
(data$Date < data$Date[i]) & (data$Date >= (data$Date[i]-days))
i = 10
(data$Date < data$Date[i]) & (data$Date >= (data$Date[i]-days))
glimpse(h3_all)
head(h3_all_w,1)
head(h3_all,1)
glimpse(h3_all)
tfilter = filter(h3_all, wflag == "W", set == "Total")
glimpse(tfilter)
tfilter = filter(h3_all,
#wflag == "W",
set == "Total")
glimpse(tfilter)
tfilter = filter(h3_all, set == "Total")
glimpse(tfiler)
glimpse(tfilter)
tmutate = mutate(tfilter, ace_pct = (aces / serve_pts), df_pct = (dfs / serve_pts), firstin_pct = (first_in / serve_pts), firstwon_pct = (first_won / first_in), secondwon_pct = (second_won / second_in), bkfcd_pct = (bk_pts / serve_pts), bksvd_pct = (bp_saved / bk_pts), retwon_pct = (return_pts_won / return_pts), win_uf_ratio = (winners / unforced))
glimpse(tmutate)
h3_all = tmutate
h3_all$player_id = ifelse(h3_all$player == 1, h3_all$p1_id, h3_all$p2_id)
glimpse(h3all)
glimpse(h3_all)
h3_player =
select(
h3_all, atp_key, player_id, Date, wflag, ace_pct, df_pct, firstin_pct, firstwon_pct, secondwon_pct, bkfcd_pct, bksvd_pct, retwon_pct, win_uf_ratio
)
glimpse(h3_player)
head(h3_player,1)
head(h3_player)
nrow(h3_player)
nrow(h3_player) / 2
glimpse(h3_all)
h3_all$class = ifelse(h3_all$wflag = "W", h3_all$winner_class, h3_all$loser_class)
h3_all$class = ifelse(h3_all$wflag == "W", h3_all$winner_class, h3_all$loser_class)
glimpse(h3_all)
h3_player =
select(
h3_all, atp_key, player_id, Date, wflag, ace_pct, df_pct, firstin_pct, firstwon_pct, secondwon_pct, bkfcd_pct, bksvd_pct, retwon_pct, win_uf_ratio
)
glimpse(h3_player)
h3_player =
select(
h3_all, atp_key, player_id, Date, wflag, class, ace_pct, df_pct, firstin_pct, firstwon_pct, secondwon_pct, bkfcd_pct, bksvd_pct, retwon_pct, win_uf_ratio
)
glimpse(h3_player)
data = h3_all
data$atp_winner_id == data$atp_winner_id[i] & (data$Date < data$Date[i]) & (data$Date >= (data$Date[i]-days))
i = 100
data$atp_winner_id == data$atp_winner_id[i] & (data$Date < data$Date[i]) & (data$Date >= (data$Date[i]-days))
data$player_id == data$player_id[i]
(data$Date < data$Date[i]) & (data$Date >= (data$Date[i]-days))
days = 90
(data$Date < data$Date[i]) & (data$Date >= (data$Date[i]-days))
data$player_id == data$player_id[i] & (data$Date < data$Date[i]) & (data$Date >= (data$Date[i]-days))
i = 125
data$player_id == data$player_id[i] & (data$Date < data$Date[i]) & (data$Date >= (data$Date[i]-days))
write.csv(h3_all, "h3allcheck.csv", row.names = TRUE)
rm(days)
glimpse(h3_all)
h3_all %>% group_by(class) %>% summarize(avg_ace_pct = mean(ace_pct, na.rm = TRUE))
glimpse(h3_all)
h3_all %>% group_by(class) %>%
summarize(avg_ace_pct = mean(ace_pct, na.rm = TRUE), avg_df_pct = mean(df_pct, na.rm = TRUE), avg_firstin_pct = mean(firstin_pct, na.rm = TRUE),
avg_firstwon_pct = mean(first_won_pct, na.rm = TRUE), avg_secondwon_pct = mean(secondwon_pct, na.rm = TRUE), avg_bkfct_pct =
mean(bkfct_pct, na.rm = TRUE), avg_bksvd_pct = mean(bksvd_pct, na.rm = TRUE, avg_retwon_pct = mean(retwon_pct, na.rm = TRUE),
avg_win_uf_ratio = mean(win_uf_ratio, na.rm = TRUE)))
h3_all %>% group_by(class) %>%
summarize(avg_ace_pct = mean(ace_pct, na.rm = TRUE), avg_df_pct = mean(df_pct, na.rm = TRUE), avg_firstin_pct = mean(firstin_pct, na.rm = TRUE),
avg_firstwon_pct = mean(firstwon_pct, na.rm = TRUE), avg_secondwon_pct = mean(secondwon_pct, na.rm = TRUE), avg_bkfct_pct =
mean(bkfct_pct, na.rm = TRUE), avg_bksvd_pct = mean(bksvd_pct, na.rm = TRUE, avg_retwon_pct = mean(retwon_pct, na.rm = TRUE),
avg_win_uf_ratio = mean(win_uf_ratio, na.rm = TRUE)))
h3_all %>% group_by(class) %>%
summarize(avg_ace_pct = mean(ace_pct, na.rm = TRUE), avg_df_pct = mean(df_pct, na.rm = TRUE), avg_firstin_pct = mean(firstin_pct, na.rm = TRUE),
avg_firstwon_pct = mean(firstwon_pct, na.rm = TRUE), avg_secondwon_pct = mean(secondwon_pct, na.rm = TRUE), avg_bkfcd_pct =
mean(bkfcd_pct, na.rm = TRUE), avg_bksvd_pct = mean(bksvd_pct, na.rm = TRUE, avg_retwon_pct = mean(retwon_pct, na.rm = TRUE),
avg_win_uf_ratio = mean(win_uf_ratio, na.rm = TRUE)))
h3_class_stats = h3_all %>% group_by(class) %>%
summarize(avg_ace_pct = mean(ace_pct, na.rm = TRUE), avg_df_pct = mean(df_pct, na.rm = TRUE), avg_firstin_pct = mean(firstin_pct, na.rm = TRUE),
avg_firstwon_pct = mean(firstwon_pct, na.rm = TRUE), avg_secondwon_pct = mean(secondwon_pct, na.rm = TRUE), avg_bkfcd_pct =
mean(bkfcd_pct, na.rm = TRUE), avg_bksvd_pct = mean(bksvd_pct, na.rm = TRUE, avg_retwon_pct = mean(retwon_pct, na.rm = TRUE),
avg_win_uf_ratio = mean(win_uf_ratio, na.rm = TRUE)))
h3_class_stats
str(h3_class_stats)
levels(h3_class_stats)
head(h3_all, 2)
head(h3_class_stats)
head(h3_all, 2)
head(h3_all, 2)
head(h3_class_stats)
library(dplyr)
library(latticeExtra)
library(ggplot2)
library(waterfall)
library(RColorBrewer)
mycolors = brewer.pal(6, "Blues")
left_join(h3_all, h3_class_stats, by = "class")
h3_all_joinclass = left_join(h3_all, h3_class_stats, by = "class")
a = h3_all_joinclass
glimpse(a)
head(h3_all, 2)
head(h3_class_stats)
h3_class_stats = h3_all %>% group_by(class) %>%
summarize(avg_ace_pct = mean(ace_pct, na.rm = TRUE), avg_df_pct = mean(df_pct, na.rm = TRUE), avg_firstin_pct = mean(firstin_pct, na.rm = TRUE),
avg_firstwon_pct = mean(firstwon_pct, na.rm = TRUE), avg_secondwon_pct = mean(secondwon_pct, na.rm = TRUE), avg_bkfcd_pct =
mean(bkfcd_pct, na.rm = TRUE), avg_bksvd_pct = mean(bksvd_pct, na.rm = TRUE, avg_retwon_pct = mean(retwon_pct, na.rm = TRUE),
avg_win_uf_ratio = mean(win_uf_ratio, na.rm = TRUE)))
head(h3_class_stats)
h3_all %>% group_by(class) %>%
summarize(avg_win_uf_ratio = mean(win_uf_ratio, na.rm = TRUE))
h3_all %>% group_by(class) %>%
summarize(avg_ace_pct = mean(ace_pct, na.rm = TRUE), avg_df_pct = mean(df_pct, na.rm = TRUE), avg_firstin_pct = mean(firstin_pct, na.rm = TRUE),
avg_firstwon_pct = mean(firstwon_pct, na.rm = TRUE), avg_secondwon_pct = mean(secondwon_pct, na.rm = TRUE), avg_bkfcd_pct =
mean(bkfcd_pct, na.rm = TRUE), avg_bksvd_pct = mean(bksvd_pct, na.rm = TRUE, avg_retwon_pct = mean(retwon_pct, na.rm = TRUE),
avg_win_uf_ratio = mean(win_uf_ratio, na.rm = TRUE)))
h3_all %>% group_by(class) %>%
summarize(avg_retwon_pct = mean(retwon_pct, na.rm = TRUE), avg_win_uf_ratio = mean(win_uf_ratio, na.rm = TRUE))
head(h3_all, 2)
mutate(a,
ace_dif = (ace_pct - avg_ace_pct)/avg_ace_pct,
df_dif = (avg_df_pct - df_pct)/avg_df_pct,
firstin_dif = (firstin_pct - avg_firstin_pct)/avg_firstin_pct,
firstwon_dif = (firstwon_pct - avg_firstwon_pct)/avg_firstwon_pct,
secondwon_dif = (secondwon_pct - avg_secondwon_pct)/avg_secondwon_pct,
brkfcd_dif = (avg_brkfcd_pct - brkfcd_pct)/avg_brkfcd_pct,
brksvd_dif = (brksvd_pct - avg_brksvd_pct)/avg_brkscd_pct,
# retwon_dif = (retwon_pct - avg_retwon_pct)/avg_retwon_pct,
#  win_uf_dif = (win_uf_ratio - avg_win_uf_ratio)/avg_win_uf_ratio
)
h3_all_joinclass = mutate(a,
ace_dif = (ace_pct - avg_ace_pct)/avg_ace_pct,
df_dif = (avg_df_pct - df_pct)/avg_df_pct,
firstin_dif = (firstin_pct - avg_firstin_pct)/avg_firstin_pct,
firstwon_dif = (firstwon_pct - avg_firstwon_pct)/avg_firstwon_pct,
secondwon_dif = (secondwon_pct - avg_secondwon_pct)/avg_secondwon_pct,
brkfcd_dif = (avg_bkfcd_pct - bkfcd_pct)/avg_bkfcd_pct,
brksvd_dif = (brksvd_pct - avg_brksvd_pct)/avg_brkscd_pct,
# retwon_dif = (retwon_pct - avg_retwon_pct)/avg_retwon_pct,
#  win_uf_dif = (win_uf_ratio - avg_win_uf_ratio)/avg_win_uf_ratio
)
mutate(a,
ace_dif = (ace_pct - avg_ace_pct)/avg_ace_pct,
df_dif = (avg_df_pct - df_pct)/avg_df_pct,
firstin_dif = (firstin_pct - avg_firstin_pct)/avg_firstin_pct,
firstwon_dif = (firstwon_pct - avg_firstwon_pct)/avg_firstwon_pct,
secondwon_dif = (secondwon_pct - avg_secondwon_pct)/avg_secondwon_pct,
bkfcd_dif = (avg_bkfcd_pct - bkfcd_pct)/avg_bkfcd_pct,
bksvd_dif = (bksvd_pct - avg_bksvd_pct)/avg_bkscd_pct,
# retwon_dif = (retwon_pct - avg_retwon_pct)/avg_retwon_pct,
#  win_uf_dif = (win_uf_ratio - avg_win_uf_ratio)/avg_win_uf_ratio
)
glimpse(a)
mutate(a,
ace_dif = (ace_pct - avg_ace_pct)/avg_ace_pct,
df_dif = (avg_df_pct - df_pct)/avg_df_pct,
firstin_dif = (firstin_pct - avg_firstin_pct)/avg_firstin_pct,
firstwon_dif = (firstwon_pct - avg_firstwon_pct)/avg_firstwon_pct,
secondwon_dif = (secondwon_pct - avg_secondwon_pct)/avg_secondwon_pct,
bkfcd_dif = (avg_bkfcd_pct - bkfcd_pct)/avg_bkfcd_pct,
bksvd_dif = (bksvd_pct - avg_bksvd_pct)/avg_bksvd_pct,
# retwon_dif = (retwon_pct - avg_retwon_pct)/avg_retwon_pct,
#  win_uf_dif = (win_uf_ratio - avg_win_uf_ratio)/avg_win_uf_ratio
)
mutate(a,
ace_dif = (ace_pct - avg_ace_pct)/avg_ace_pct,
df_dif = (avg_df_pct - df_pct)/avg_df_pct,
firstin_dif = (firstin_pct - avg_firstin_pct)/avg_firstin_pct,
firstwon_dif = (firstwon_pct - avg_firstwon_pct)/avg_firstwon_pct,
secondwon_dif = (secondwon_pct - avg_secondwon_pct)/avg_secondwon_pct,
bkfcd_dif = (avg_bkfcd_pct - bkfcd_pct)/avg_bkfcd_pct,
bksvd_dif = (bksvd_pct - avg_bksvd_pct)/avg_bksvd_pct
# retwon_dif = (retwon_pct - avg_retwon_pct)/avg_retwon_pct,
#  win_uf_dif = (win_uf_ratio - avg_win_uf_ratio)/avg_win_uf_ratio
)
h3_all_joinclass = mutate(a,
ace_dif = (ace_pct - avg_ace_pct)/avg_ace_pct,
df_dif = (avg_df_pct - df_pct)/avg_df_pct,
firstin_dif = (firstin_pct - avg_firstin_pct)/avg_firstin_pct,
firstwon_dif = (firstwon_pct - avg_firstwon_pct)/avg_firstwon_pct,
secondwon_dif = (secondwon_pct - avg_secondwon_pct)/avg_secondwon_pct,
bkfcd_dif = (avg_bkfcd_pct - bkfcd_pct)/avg_bkfcd_pct,
bksvd_dif = (bksvd_pct - avg_bksvd_pct)/avg_bksvd_pct
# retwon_dif = (retwon_pct - avg_retwon_pct)/avg_retwon_pct,
#  win_uf_dif = (win_uf_ratio - avg_win_uf_ratio)/avg_win_uf_ratio
)
head(h3_all_joinclass,1)
library(dplyr)
library(latticeExtra)
library(ggplot2)
library(waterfall)
library(RColorBrewer)
mycolors = brewer.pal(6, "Blues")
g <- ggplot(h3_all_joinclass, aes(x = ace_dif))
g + geom_density(aes(color = class)) + facet_grid(~class)
g + geom_density(aes(color = class)) + facet_wrap(~class)
View(h3_all_joinclass)
View(h3_class_stats)
View(h3_all)
h3_class_Stats_test = h3_all %>% group_by(class) %>%
summarize(avg_ace_pct = (sum(aces) / sum(serve_pts)), avg_df_pct = mean(df_pct, na.rm = TRUE), avg_firstin_pct = mean(firstin_pct, na.rm = TRUE),
avg_firstwon_pct = mean(firstwon_pct, na.rm = TRUE), avg_secondwon_pct = mean(secondwon_pct, na.rm = TRUE), avg_bkfcd_pct =
mean(bkfcd_pct, na.rm = TRUE), avg_bksvd_pct = mean(bksvd_pct, na.rm = TRUE, avg_retwon_pct = mean(retwon_pct, na.rm = TRUE),
avg_win_uf_ratio = mean(win_uf_ratio, na.rm = TRUE)))
View(h3_class_Stats_test)
h3_class_stats = h3_all %>% group_by(class) %>%
summarize(avg_ace_pct = (sum(aces) / sum(serve_pts)), avg_df_pct = (sum(dfs) / sum(serve_pts)), avg_firstin_pct = (sum(first_in)/sum(servepts)),
avg_firstwon_pct = (sum(first_won)/sum(first_in)), avg_secondwon_pct = (sum(second_won)/sum(second_in)), avg_bkfcd_pct =
(sum(bk_pts)/sum(serve_pts)), avg_bksvd_pct = (sum(bp_saved)/sum(bk_pts)), avg_retwon_pct = (sum(return_pts_won)/sum(return_pts)),
avg_win_uf_ratio = (sum(winners)/sum(unforced)))
h3_class_stats = h3_all %>% group_by(class) %>%
summarize(avg_ace_pct = (sum(aces) / sum(serve_pts)), avg_df_pct = (sum(dfs) / sum(serve_pts)), avg_firstin_pct = (sum(first_in)/sum(serve_pts)),
avg_firstwon_pct = (sum(first_won)/sum(first_in)), avg_secondwon_pct = (sum(second_won)/sum(second_in)), avg_bkfcd_pct =
(sum(bk_pts)/sum(serve_pts)), avg_bksvd_pct = (sum(bp_saved)/sum(bk_pts)), avg_retwon_pct = (sum(return_pts_won)/sum(return_pts)),
avg_win_uf_ratio = (sum(winners)/sum(unforced)))
head(h3_class_stats)
h3_all_joinclass = left_join(h3_all, h3_class_stats, by = "class")
a = h3_all_joinclass
h3_all_joinclass = mutate(a,
ace_dif = (ace_pct - avg_ace_pct)/avg_ace_pct,
df_dif = (avg_df_pct - df_pct)/avg_df_pct,
firstin_dif = (firstin_pct - avg_firstin_pct)/avg_firstin_pct,
firstwon_dif = (firstwon_pct - avg_firstwon_pct)/avg_firstwon_pct,
secondwon_dif = (secondwon_pct - avg_secondwon_pct)/avg_secondwon_pct,
bkfcd_dif = (avg_bkfcd_pct - bkfcd_pct)/avg_bkfcd_pct,
bksvd_dif = (bksvd_pct - avg_bksvd_pct)/avg_bksvd_pct
# retwon_dif = (retwon_pct - avg_retwon_pct)/avg_retwon_pct,
#  win_uf_dif = (win_uf_ratio - avg_win_uf_ratio)/avg_win_uf_ratio
)
g <- ggplot(h3_all_joinclass, aes(x = ace_dif))
g + geom_density(aes(color = class)) + facet_wrap(~class)
g + geom_histogram(binwidth = 0.5) + facet_wrap(~class)
h3_all_joinclass = left_join(h3_all, h3_class_stats, by = "class")
a = h3_all_joinclass
h3_all_joinclass = mutate(a,
ace_dif = (ace_pct - avg_ace_pct)/avg_ace_pct,
df_dif = (avg_df_pct - df_pct)/avg_df_pct,
firstin_dif = (firstin_pct - avg_firstin_pct)/avg_firstin_pct,
firstwon_dif = (firstwon_pct - avg_firstwon_pct)/avg_firstwon_pct,
secondwon_dif = (secondwon_pct - avg_secondwon_pct)/avg_secondwon_pct,
bkfcd_dif = (avg_bkfcd_pct - bkfcd_pct)/avg_bkfcd_pct,
bksvd_dif = (bksvd_pct - avg_bksvd_pct)/avg_bksvd_pct,
retwon_dif = (retwon_pct - avg_retwon_pct)/avg_retwon_pct,
win_uf_dif = (win_uf_ratio - avg_win_uf_ratio)/avg_win_uf_ratio
)
head(h3_all_joinclass,1)
View(h3_all_joinclass)
rm(h3_class_Stats_test)
View(h3_class_stats)
group_by(c_odds_atp_all, upset_type)
summarize(by_utype, n = n())
summarize(by_utype, n = n())[c(1,4,5,3,2),]
utype_summary
utype_summary$upset_type
as.factor(utype_summary$upset_type)
a = h3_all_joinclass
a$class = as.factor(a$class)
str(a)
str(a$class)
a$class
levels(a$class)
a$class = factor(a$class, levels = levels(a$class)[c(5, 3, 1, 6, 7, 2, 4, 8)])
levels(a$class)
rm(a)
h3_all_joinclass$class = as.factor(h3_all_joinclass$class)
levels(h3_all_joinclass$class)
h3_all_joinclass$class = factor(h3_all_joinclass$class, levels = levels(h3_all_joinclass$class)[c(5, 3, 1, 6, 7, 2, 4, 8)])
levels(h3_all_joinclass$class)
head(h3_all_joinclass,1)
g <- ggplot(h3_all_joinclass, aes(x = ace_dif))
g + geom_histogram(binwidth = 0.5) + facet_wrap(~class)
g + geom_histogram(binwidth = 0.2) + facet_wrap(~class)
g + geom_histogram(binwidth = 1) + facet_wrap(~class)
g + geom_histogram(binwidth = 0.75) + facet_wrap(~class)
g + geom_density(aes(color = class)) + facet_wrap(~class)
g + geom_histogram(binwidth = 0.25) + facet_wrap(~class)
g <- ggplot(h3_all_joinclass, aes(x = df_dif))
g + geom_density(aes(color = class)) + facet_wrap(~class)
g + geom_density(aes(color = class)) + facet_wrap(~class) + xlim(-2,2)
g <- ggplot(h3_all_joinclass, aes(x = firstin_dif))
g + geom_density(aes(color = class)) + facet_wrap(~class) + xlim(-2,2)
head(h3_all_joinclass,1)
h3_all$match_id == h3_upset$match_id
left_join(h3_all, h3_upset$match_id, by = "match_id")
left_join(h3_all, h3_upset$atp_key, by = "atp_key")
glimpse(h3_all)
t_upset = h3_upset[,c("atp_key", "Date")]
t_upset
left_join(h3_all, t_upset, by = "atp_key")
left_join(h3_all, t_upset, by = "atp_key"))[,"Date.y"]
left_join(h3_all, t_upset, by = "atp_key")[,"Date.y"]
ifelse((is.na(left_join(h3_all, t_upset, by = "atp_key")[,"Date.y"]),"F","U")
ifelse(is.na(left_join(h3_all, t_upset, by = "atp_key")[,"Date.y"]),"F","U")
View(h3_all)
h3_all$upset_flag = (
t_upset = h3_upset[,c("atp_key", "Date")]
ifelse(is.na(left_join(h3_all, t_upset, by = "atp_key")[,"Date.y"]),"F","U"))
t_upset = h3_upset[,c("atp_key", "Date")]
h3_all$upset_flag =
ifelse(is.na(left_join(h3_all, t_upset, by = "atp_key")[,"Date.y"]),"F","U")
h3_upset
ifelse(is.na(left_join(h3_all, t_upset, by = "atp_key")[,"Date.y"]),"F","U")
#glimpse(h3_all)
glimpse(h3_all)
glimpse(h3_up)
glimpse(h3_upset)
h3_upset["set" = "Total",c("atp_key", "Date")]
h3_upset[set = "Total",c("atp_key", "Date")]
h3_upset[h3_upset$set = "Total",c("atp_key", "Date")]
h3_upset[h3_upset$set == "Total",c("atp_key", "Date")]
t_upset = h3_upset[h3_upset$set == "Total",c("atp_key", "Date")]
t_upset = h3_upset[h3_upset$set == "Total",c("atp_key", "Date", "p1_id")]
x1 = h3_all$atp_key
x2 = t_upset$atp_key
y1 = h3_all$p1_id
y2 = t_upset$p1_id
ifelse(is.na(left_join(h3_all, t_upset, by = c("x1" = "x2", "y1" = "y2")[,"Date.y"]),"F","U")
ifelse(is.na(left_join(h3_all, t_upset, by = c("x1" = "x2", "y1" = "y2"))[,"Date.y"]),"F","U")
left_join(h3_all, t_upset, by = c(x1 = x2, y1 = y2))
x1 = h3_all$atp_key
x2 = t_upset$atp_key
y1 = h3_all$p1_id
y2 = t_upset$p1_id
left_join(h3_all, t_upset, by = c("x1" = "x2", "y1 = y2"))
left_join(h3_all, t_upset, by = c("h3_all$atp_key" = "t_upset$atp_key", "h3_all$p1_id" = "t_upset_p1_id"))
left_join(h3_all, t_upset, by = c("atp_key" = "t_upset$atp_key", "p1_id" = "t_upset_p1_id"))
t_upset = h3_upset[h3_upset$set == "Total",c("atp_key","p1_id")]
paste(t_upset$atp_key, t_upset$p1_id)
t_upset$joincol = paste(t_upset$atp_key, t_upset$p1_id)
t_h3all = h3_all
t_h3all$joincol = paste(t_h3all$atp_key, t_h3all$p1_id)
left_join(t_h3_all, t_upset, by = "joincol")
left_join(t_h3all, t_upset, by = "joincol")
ifelse(is.na(left_join(t_h3all, t_upset, by = "joincol")[,"Date.y"]),"F","U")
ifelse(is.na(left_join(t_h3all, t_upset, by = "joincol")[,"atp_key.y"]),"F","U")
nrow(ifelse(is.na(left_join(t_h3all, t_upset, by = "joincol")[,"atp_key.y"]),"F","U"))
str(ifelse(is.na(left_join(t_h3all, t_upset, by = "joincol")[,"atp_key.y"]),"F","U"))
glimpse(h3_all)
View(h3_upset)
write.csv(h3_all, "h3_check.csv", row.names = TRUE)
